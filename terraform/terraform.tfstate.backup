{
  "version": 4,
  "terraform_version": "1.7.4",
  "serial": 242,
  "lineage": "40993f62-0e19-24e9-f137-c14897962b39",
  "outputs": {
    "my-kubeconfig": {
      "value": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlOREF5TWpneApNek15TXpsYUZ3MDBOREF5TWpneE16TXlNemxhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUi9HTVgyVVBGZGtrQzYzTDByZWtldFVaK29PVC85YitxVTVzRlhQQzlXUlpJTjM0VAo2Y0tLdjd1OTlLbysvY2JLdTNlM3JqdU5TSTNSc3Zta3NKdEo3YkcxUm90VGVsOG5HRm02aVlLWllnS0JJQVF2Ckd0VVpEN1d4VzRMVk5RZXlyRmZRL2pEVE53dzJFWitOY0lEdXBZZ0d4eTB3cDQ5VEpEY0dQZUVtdzltSlBURDIKR2cyKzJEUXc0MWpxZld5T01mMGd0NWVOcmxDQ3RpeVlIeTJodGFxeS9ndVhKdE91WWZ5TDNSSUlPRUpyK1BrbQp2RlRJVTZFdGhFSzg4aVUzQ1Z3T2t0cm43a0dMMHM1d296c3M4NXQ2dHRuSW4wSlppZVZVUGxReXhNa0dMbjg0CkpzbW9zOVdvQzdZT0Jrb05WRnhTQUhsVTZwck9sd0ZvYWgvSEFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlI5N0IzTnMwd0pkYmU5eG1jZQpodlhNZ29YR1FqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFLak5jUHE2bW5vdDZTK3JZaGV0M1NCNUxZMCtmCnJqYnpya0NaUTQ4WE5ZSlJaZjg2bGVPRXlDMFo3ejUvSmlpeDF1SnYxTWc3ajE5dWd1c0psdnZMQ2FSMWtIcWQKY2tiSXA4UTlUZFUvNEMzWGdOT1lVNkJOTXhEUEhNd05BdE9QOC9tdy9zTFdXS0habGlSVFFKdTJGTUswZEZaNwp2aStYUlhPR1U0amszK2p0WXphREgzY2ppdkxGeUFxbHJHQkh6Z1Jqc1FScExVbDBTNDNGdWU1V0NrcHlaaEZJCllRVU14QTJ5ZThKU0dldkVJNXFUUWNzalN6dFNnVHU1THArd3hFNWZxNE5FU09ab2hib2lxbmNBWmhXNTJiMG4KNXh0aW1CUHAvclhKeTB2WjNmOFVQeHhJdEM3d1NNekczV3pCRlVqMUoxN0RiQWZGU25GeTF5b2hQUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://6c2a8cb7-faa9-456d-a09f-80e256fea71c.k8s.ondigitalocean.com\n  name: do-nyc1-quantum-k8s-cluster\ncontexts:\n- context:\n    cluster: do-nyc1-quantum-k8s-cluster\n    user: do-nyc1-quantum-k8s-cluster-admin\n  name: do-nyc1-quantum-k8s-cluster\ncurrent-context: do-nyc1-quantum-k8s-cluster\nusers:\n- name: do-nyc1-quantum-k8s-cluster-admin\n  user:\n    token: dop_v1_9fe390cdc62af9d56b2d28e3f96f1830640c972837d15cf1b469ee27acfa0c8d\n",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "kubernetes_service_v1",
      "name": "ingress_svc",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/nginx-ingress-ingress-nginx-controller",
            "metadata": [
              {
                "annotations": {
                  "kubernetes.digitalocean.com/load-balancer-id": "bc6b7b11-79ac-43fc-841e-fe1e8263a137",
                  "meta.helm.sh/release-name": "nginx-ingress",
                  "meta.helm.sh/release-namespace": "default"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "controller",
                  "app.kubernetes.io/instance": "nginx-ingress",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx",
                  "app.kubernetes.io/version": "1.9.6",
                  "helm.sh/chart": "ingress-nginx-4.9.1"
                },
                "name": "nginx-ingress-ingress-nginx-controller",
                "namespace": "default",
                "resource_version": "5443",
                "uid": "e9fb6609-c5ca-4541-972e-5f4949386b8c"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.245.202.55",
                "cluster_ips": [
                  "10.245.202.55"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "http",
                    "name": "http",
                    "node_port": 32627,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "http"
                  },
                  {
                    "app_protocol": "https",
                    "name": "https",
                    "node_port": 30620,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "https"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/component": "controller",
                  "app.kubernetes.io/instance": "nginx-ingress",
                  "app.kubernetes.io/name": "ingress-nginx"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "167.172.12.86"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_domain",
      "name": "shopnest_dot_uz",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "shopnest.uz",
            "ip_address": null,
            "name": "shopnest.uz",
            "ttl": 1800,
            "urn": "do:domain:shopnest.uz"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_kubernetes_cluster",
      "name": "quantum_k8s_cluster",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "auto_upgrade": false,
            "cluster_subnet": "10.244.0.0/16",
            "created_at": "2024-02-28 13:32:29 +0000 UTC",
            "destroy_all_associated_resources": false,
            "endpoint": "https://6c2a8cb7-faa9-456d-a09f-80e256fea71c.k8s.ondigitalocean.com",
            "ha": false,
            "id": "6c2a8cb7-faa9-456d-a09f-80e256fea71c",
            "ipv4_address": "",
            "kube_config": [
              {
                "client_certificate": "",
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlOREF5TWpneApNek15TXpsYUZ3MDBOREF5TWpneE16TXlNemxhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUi9HTVgyVVBGZGtrQzYzTDByZWtldFVaK29PVC85YitxVTVzRlhQQzlXUlpJTjM0VAo2Y0tLdjd1OTlLbysvY2JLdTNlM3JqdU5TSTNSc3Zta3NKdEo3YkcxUm90VGVsOG5HRm02aVlLWllnS0JJQVF2Ckd0VVpEN1d4VzRMVk5RZXlyRmZRL2pEVE53dzJFWitOY0lEdXBZZ0d4eTB3cDQ5VEpEY0dQZUVtdzltSlBURDIKR2cyKzJEUXc0MWpxZld5T01mMGd0NWVOcmxDQ3RpeVlIeTJodGFxeS9ndVhKdE91WWZ5TDNSSUlPRUpyK1BrbQp2RlRJVTZFdGhFSzg4aVUzQ1Z3T2t0cm43a0dMMHM1d296c3M4NXQ2dHRuSW4wSlppZVZVUGxReXhNa0dMbjg0CkpzbW9zOVdvQzdZT0Jrb05WRnhTQUhsVTZwck9sd0ZvYWgvSEFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlI5N0IzTnMwd0pkYmU5eG1jZQpodlhNZ29YR1FqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFLak5jUHE2bW5vdDZTK3JZaGV0M1NCNUxZMCtmCnJqYnpya0NaUTQ4WE5ZSlJaZjg2bGVPRXlDMFo3ejUvSmlpeDF1SnYxTWc3ajE5dWd1c0psdnZMQ2FSMWtIcWQKY2tiSXA4UTlUZFUvNEMzWGdOT1lVNkJOTXhEUEhNd05BdE9QOC9tdy9zTFdXS0habGlSVFFKdTJGTUswZEZaNwp2aStYUlhPR1U0amszK2p0WXphREgzY2ppdkxGeUFxbHJHQkh6Z1Jqc1FScExVbDBTNDNGdWU1V0NrcHlaaEZJCllRVU14QTJ5ZThKU0dldkVJNXFUUWNzalN6dFNnVHU1THArd3hFNWZxNE5FU09ab2hib2lxbmNBWmhXNTJiMG4KNXh0aW1CUHAvclhKeTB2WjNmOFVQeHhJdEM3d1NNekczV3pCRlVqMUoxN0RiQWZGU25GeTF5b2hQUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "expires_at": "2024-03-06T13:36:52Z",
                "host": "https://6c2a8cb7-faa9-456d-a09f-80e256fea71c.k8s.ondigitalocean.com",
                "raw_config": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlOREF5TWpneApNek15TXpsYUZ3MDBOREF5TWpneE16TXlNemxhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUi9HTVgyVVBGZGtrQzYzTDByZWtldFVaK29PVC85YitxVTVzRlhQQzlXUlpJTjM0VAo2Y0tLdjd1OTlLbysvY2JLdTNlM3JqdU5TSTNSc3Zta3NKdEo3YkcxUm90VGVsOG5HRm02aVlLWllnS0JJQVF2Ckd0VVpEN1d4VzRMVk5RZXlyRmZRL2pEVE53dzJFWitOY0lEdXBZZ0d4eTB3cDQ5VEpEY0dQZUVtdzltSlBURDIKR2cyKzJEUXc0MWpxZld5T01mMGd0NWVOcmxDQ3RpeVlIeTJodGFxeS9ndVhKdE91WWZ5TDNSSUlPRUpyK1BrbQp2RlRJVTZFdGhFSzg4aVUzQ1Z3T2t0cm43a0dMMHM1d296c3M4NXQ2dHRuSW4wSlppZVZVUGxReXhNa0dMbjg0CkpzbW9zOVdvQzdZT0Jrb05WRnhTQUhsVTZwck9sd0ZvYWgvSEFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlI5N0IzTnMwd0pkYmU5eG1jZQpodlhNZ29YR1FqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFLak5jUHE2bW5vdDZTK3JZaGV0M1NCNUxZMCtmCnJqYnpya0NaUTQ4WE5ZSlJaZjg2bGVPRXlDMFo3ejUvSmlpeDF1SnYxTWc3ajE5dWd1c0psdnZMQ2FSMWtIcWQKY2tiSXA4UTlUZFUvNEMzWGdOT1lVNkJOTXhEUEhNd05BdE9QOC9tdy9zTFdXS0habGlSVFFKdTJGTUswZEZaNwp2aStYUlhPR1U0amszK2p0WXphREgzY2ppdkxGeUFxbHJHQkh6Z1Jqc1FScExVbDBTNDNGdWU1V0NrcHlaaEZJCllRVU14QTJ5ZThKU0dldkVJNXFUUWNzalN6dFNnVHU1THArd3hFNWZxNE5FU09ab2hib2lxbmNBWmhXNTJiMG4KNXh0aW1CUHAvclhKeTB2WjNmOFVQeHhJdEM3d1NNekczV3pCRlVqMUoxN0RiQWZGU25GeTF5b2hQUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://6c2a8cb7-faa9-456d-a09f-80e256fea71c.k8s.ondigitalocean.com\n  name: do-nyc1-quantum-k8s-cluster\ncontexts:\n- context:\n    cluster: do-nyc1-quantum-k8s-cluster\n    user: do-nyc1-quantum-k8s-cluster-admin\n  name: do-nyc1-quantum-k8s-cluster\ncurrent-context: do-nyc1-quantum-k8s-cluster\nusers:\n- name: do-nyc1-quantum-k8s-cluster-admin\n  user:\n    token: dop_v1_9fe390cdc62af9d56b2d28e3f96f1830640c972837d15cf1b469ee27acfa0c8d\n",
                "token": "dop_v1_9fe390cdc62af9d56b2d28e3f96f1830640c972837d15cf1b469ee27acfa0c8d"
              }
            ],
            "maintenance_policy": [
              {
                "day": "any",
                "duration": "4h0m0s",
                "start_time": "22:00"
              }
            ],
            "name": "quantum-k8s-cluster",
            "node_pool": [
              {
                "actual_node_count": 1,
                "auto_scale": true,
                "id": "e1a9dd75-51ab-4f6c-b720-f6668765b941",
                "labels": {},
                "max_nodes": 3,
                "min_nodes": 1,
                "name": "worker-node",
                "node_count": 0,
                "nodes": [
                  {
                    "created_at": "2024-02-28 13:32:29 +0000 UTC",
                    "droplet_id": "403805429",
                    "id": "ee590259-10ed-4a93-8776-d8e75c20dbdf",
                    "name": "worker-node-o2p63",
                    "status": "running",
                    "updated_at": "2024-02-28 13:34:48 +0000 UTC"
                  }
                ],
                "size": "s-4vcpu-8gb-amd",
                "tags": [],
                "taint": []
              }
            ],
            "region": "nyc1",
            "registry_integration": false,
            "service_subnet": "10.245.0.0/16",
            "status": "running",
            "surge_upgrade": true,
            "tags": [
              "k8s"
            ],
            "timeouts": null,
            "updated_at": "2024-02-28 14:00:07 +0000 UTC",
            "urn": "do:kubernetes:6c2a8cb7-faa9-456d-a09f-80e256fea71c",
            "version": "1.29.1-do.0",
            "vpc_uuid": "21d790bc-eb43-40f0-8261-f6f762959379"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIzIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "argocd.shopnest.uz",
            "id": "1728389766",
            "name": "argocd",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "elasticsearch",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "elasticsearch.shopnest.uz",
            "id": "1728389764",
            "name": "elasticsearch",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "ezzydocs",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "ezzydocs.shopnest.uz",
            "id": "1728389768",
            "name": "ezzydocs",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "grafana.shopnest.uz",
            "id": "1728389769",
            "name": "grafana",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "kibana",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "kibana.shopnest.uz",
            "id": "1728389762",
            "name": "kibana",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "logstash",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "logstash.shopnest.uz",
            "id": "1728389765",
            "name": "logstash",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "main_record",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "shopnest.uz",
            "id": "1728389767",
            "name": "@",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_record",
      "name": "main_record_www",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "domain": "shopnest.uz",
            "flags": 0,
            "fqdn": "www.shopnest.uz",
            "id": "1728389763",
            "name": "www",
            "port": 0,
            "priority": 0,
            "tag": "",
            "ttl": 1800,
            "type": "A",
            "value": "167.172.12.86",
            "weight": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.kubernetes_service_v1.ingress_svc",
            "digitalocean_domain.shopnest_dot_uz",
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert-manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.8.0",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.8.0"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.8.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nginx-ingress",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.9.6",
                "chart": "ingress-nginx",
                "name": "nginx-ingress",
                "namespace": "default",
                "revision": 1,
                "values": "{\"controller\":{\"publishService\":{\"enabled\":true}}}",
                "version": "4.9.1"
              }
            ],
            "name": "nginx-ingress",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "controller.publishService.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.9.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "letsencrypt_prod",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "name": "letsencrypt-prod"
                },
                "spec": {
                  "acme": {
                    "email": "ismoillmirabbosoff@gmail.com",
                    "privateKeySecretRef": {
                      "name": "letsencrypt-prod"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "solvers": [
                      {
                        "http01": {
                          "ingress": {
                            "class": "nginx"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "email": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "http01": [
                                    "object",
                                    {
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "letsencrypt-prod",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "acme": {
                    "disableAccountKeyGeneration": null,
                    "email": "ismoillmirabbosoff@gmail.com",
                    "enableDurationFeature": null,
                    "externalAccountBinding": {
                      "keyAlgorithm": null,
                      "keyID": null,
                      "keySecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "preferredChain": "",
                    "privateKeySecretRef": {
                      "key": null,
                      "name": "letsencrypt-prod"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "skipTLSVerify": null,
                    "solvers": [
                      {
                        "dns01": {
                          "acmeDNS": {
                            "accountSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "host": null
                          },
                          "akamai": {
                            "accessTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "serviceConsumerDomain": null
                          },
                          "azureDNS": {
                            "clientID": null,
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "environment": null,
                            "hostedZoneName": null,
                            "managedIdentity": {
                              "clientID": null,
                              "resourceID": null
                            },
                            "resourceGroupName": null,
                            "subscriptionID": null,
                            "tenantID": null
                          },
                          "cloudDNS": {
                            "hostedZoneName": null,
                            "project": null,
                            "serviceAccountSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "cloudflare": {
                            "apiKeySecretRef": {
                              "key": null,
                              "name": null
                            },
                            "apiTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "email": null
                          },
                          "cnameStrategy": null,
                          "digitalocean": {
                            "tokenSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "rfc2136": {
                            "nameserver": null,
                            "tsigAlgorithm": null,
                            "tsigKeyName": null,
                            "tsigSecretSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "route53": {
                            "accessKeyID": null,
                            "hostedZoneID": null,
                            "region": null,
                            "role": null,
                            "secretAccessKeySecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "webhook": {
                            "config": null,
                            "groupName": null,
                            "solverName": null
                          }
                        },
                        "http01": {
                          "gatewayHTTPRoute": {
                            "labels": null,
                            "parentRefs": null,
                            "serviceType": null
                          },
                          "ingress": {
                            "class": "nginx",
                            "ingressTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              }
                            },
                            "name": null,
                            "podTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              },
                              "spec": {
                                "affinity": {
                                  "nodeAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": null
                                    }
                                  },
                                  "podAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  },
                                  "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  }
                                },
                                "nodeSelector": null,
                                "priorityClassName": null,
                                "serviceAccountName": null,
                                "tolerations": null
                              }
                            },
                            "serviceType": null
                          }
                        },
                        "selector": {
                          "dnsNames": null,
                          "dnsZones": null,
                          "matchLabels": null
                        }
                      }
                    ]
                  },
                  "ca": {
                    "crlDistributionPoints": null,
                    "ocspServers": null,
                    "secretName": null
                  },
                  "selfSigned": {
                    "crlDistributionPoints": null
                  },
                  "vault": {
                    "auth": {
                      "appRole": {
                        "path": null,
                        "roleId": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "kubernetes": {
                        "mountPath": null,
                        "role": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "tokenSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "caBundle": null,
                    "namespace": null,
                    "path": null,
                    "server": null
                  },
                  "venafi": {
                    "cloud": {
                      "apiTokenSecretRef": {
                        "key": null,
                        "name": null
                      },
                      "url": null
                    },
                    "tpp": {
                      "caBundle": null,
                      "credentialsRef": {
                        "name": null
                      },
                      "url": null
                    },
                    "zone": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "disableAccountKeyGeneration": "bool",
                          "email": "string",
                          "enableDurationFeature": "bool",
                          "externalAccountBinding": [
                            "object",
                            {
                              "keyAlgorithm": "string",
                              "keyID": "string",
                              "keySecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "preferredChain": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "skipTLSVerify": "bool",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "dns01": [
                                    "object",
                                    {
                                      "acmeDNS": [
                                        "object",
                                        {
                                          "accountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "host": "string"
                                        }
                                      ],
                                      "akamai": [
                                        "object",
                                        {
                                          "accessTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "serviceConsumerDomain": "string"
                                        }
                                      ],
                                      "azureDNS": [
                                        "object",
                                        {
                                          "clientID": "string",
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "environment": "string",
                                          "hostedZoneName": "string",
                                          "managedIdentity": [
                                            "object",
                                            {
                                              "clientID": "string",
                                              "resourceID": "string"
                                            }
                                          ],
                                          "resourceGroupName": "string",
                                          "subscriptionID": "string",
                                          "tenantID": "string"
                                        }
                                      ],
                                      "cloudDNS": [
                                        "object",
                                        {
                                          "hostedZoneName": "string",
                                          "project": "string",
                                          "serviceAccountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "cloudflare": [
                                        "object",
                                        {
                                          "apiKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "apiTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "email": "string"
                                        }
                                      ],
                                      "cnameStrategy": "string",
                                      "digitalocean": [
                                        "object",
                                        {
                                          "tokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "rfc2136": [
                                        "object",
                                        {
                                          "nameserver": "string",
                                          "tsigAlgorithm": "string",
                                          "tsigKeyName": "string",
                                          "tsigSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "route53": [
                                        "object",
                                        {
                                          "accessKeyID": "string",
                                          "hostedZoneID": "string",
                                          "region": "string",
                                          "role": "string",
                                          "secretAccessKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "webhook": [
                                        "object",
                                        {
                                          "config": "dynamic",
                                          "groupName": "string",
                                          "solverName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "http01": [
                                    "object",
                                    {
                                      "gatewayHTTPRoute": [
                                        "object",
                                        {
                                          "labels": [
                                            "map",
                                            "string"
                                          ],
                                          "parentRefs": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "group": "string",
                                                "kind": "string",
                                                "name": "string",
                                                "namespace": "string",
                                                "sectionName": "string"
                                              }
                                            ]
                                          ],
                                          "serviceType": "string"
                                        }
                                      ],
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string",
                                          "ingressTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "name": "string",
                                          "podTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "spec": [
                                                "object",
                                                {
                                                  "affinity": [
                                                    "object",
                                                    {
                                                      "nodeAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "preference": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "object",
                                                            {
                                                              "nodeSelectorTerms": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ]
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "podAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ],
                                                      "podAntiAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "nodeSelector": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "priorityClassName": "string",
                                                  "serviceAccountName": "string",
                                                  "tolerations": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "effect": "string",
                                                        "key": "string",
                                                        "operator": "string",
                                                        "tolerationSeconds": "number",
                                                        "value": "string"
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "serviceType": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "dnsNames": [
                                        "list",
                                        "string"
                                      ],
                                      "dnsZones": [
                                        "list",
                                        "string"
                                      ],
                                      "matchLabels": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "ca": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ],
                          "ocspServers": [
                            "list",
                            "string"
                          ],
                          "secretName": "string"
                        }
                      ],
                      "selfSigned": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "vault": [
                        "object",
                        {
                          "auth": [
                            "object",
                            {
                              "appRole": [
                                "object",
                                {
                                  "path": "string",
                                  "roleId": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "kubernetes": [
                                "object",
                                {
                                  "mountPath": "string",
                                  "role": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "tokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "caBundle": "string",
                          "namespace": "string",
                          "path": "string",
                          "server": "string"
                        }
                      ],
                      "venafi": [
                        "object",
                        {
                          "cloud": [
                            "object",
                            {
                              "apiTokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "tpp": [
                            "object",
                            {
                              "caBundle": "string",
                              "credentialsRef": [
                                "object",
                                {
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "zone": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "digitalocean_kubernetes_cluster.quantum_k8s_cluster",
            "helm_release.cert-manager",
            "helm_release.nginx_ingress"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
